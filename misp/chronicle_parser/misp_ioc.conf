# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# Product: MISP Threat Sharing
# Category: IOC
# Supported Format: JSON
# Reference: https://www.misp-project.org/openapi/
# Last Updated: 2023-07-28
# Copyright 2023 Chronicle LLC


# This MISP_IOC parser supports the following MISP Event Types:
# ------------------------------------------------------------
# - ip-src                  -> IP_ADDRESS
# - ip-dst                  -> IP_ADDRESS
# - ip-dst|port             -> IP_ADDRESS
# - ip-src|port             -> IP_ADDRESS
# - domain|ip               -> DOMAIN_NAME 
# - domain                  -> DOMAIN_NAME
# - hostname                -> DOMAIN_NAME
# - url                     -> URL
# - filename|md5            -> FILE
# - filename|sha1           -> FILE
# - filename|sha256         -> FILE
# - md5                     -> FILE
# - sha1                    -> FILE
# - sha256                  -> FILE
# - filename                -> FILE
# - email                   -> USER
# - email-src               -> USER
# - email-dst               -> USER
# - whois-registrant-email  -> USER
# - useragent               -> MUTEX
# - regkey                  -> MUTEX
# - regkey|value            -> MUTEX

filter {
    # Set to match your MISP (external) base URL
    mutate {
        replace => {
            # set to your external MISP URL
            "misp_url" => "misp.example.altostrat.com"

            # if your log sources don't include the HTTP(S) protocol set to true
            "strip_protocol_from_urls" => "true"
        }
    }

    # set to true when a support MISP IOC type is parsed
    # - this is used to gracefully handle unsupported MISP IOC types
    mutate {
        replace => {
            "_supported_misp_ioc_type" => "false"
        }
    }

    # Initialize sentinel fields required for logic conditions
    mutate {
        replace => {
            # custom fields added to the original MISP JSON event
            "Attribute.interval_start" => ""
            "Attribute.interval_end" => ""
            "interval_start" => ""
            "interval_end" => ""
            
            "Orgc.name" => ""

            "Attribute.first_seen" => ""
            "Attribute.last_seen" => ""
            "Attribute.uuid" => ""
            "Attribute.category" => ""
            "Attribute.comment" => ""
            "Attribute.timestamp" => ""
            "Attribute.type" => ""
            "Attribute.value"=> ""

            "meta-category" => ""

            "id" => ""
            "orgc_id" => ""
            "org_id" => ""
            "date" => ""
            "threat_level_id" => ""
            "info" => ""
            "published" => "" 
            "uuid" => ""
            "attribute_count" => ""
            "analysis" => ""
            "timestamp" => ""
            "distribution" => ""
            "proposal_email_lock" => "" 
            "locked" => "" 
            "publish_timestamp" => ""
            "sharing_group_id" => "" 
            "disable_correlation" => "" 
            "extends_uuid" => "" 
            "protected" => "" 

            "groupedAttributes.category" => ""
        }
    }

    json {
        source         => "message"
        array_function => "split_columns"
        on_error       => "_not_json"
    }

    if [_not_json] {

        drop { tag => "TAG_MALFORMED_MESSAGE" }

    } else {

        # >>> Top level Metadata fields
        mutate {
            replace => {
                "event.idm.entity.metadata.product_name" => "MISP Threat Sharing"
                "event.idm.entity.metadata.vendor_name" => "misp-project.org"
            }
        }

        # Summary of the MISP Event
        if [info] != "" {
            mutate {
                replace => {
                    "event.idm.entity.metadata.description" => "%{info}"
                }
            }
        }

        # URL back to MISP instance
        # - an object of attributes, use the attribute level event id 
        if ([meta-category] != "" and [id] != "") {
            mutate {
                replace => {
                    "threat_det_1.url_back_to_product" => "https://%{misp_url}/events/view/%{Attribute.0.event_id}"
                }
            }
        } else {
        # - a single attribute, use the top level event id
            mutate {
                replace => {
                    "threat_det_1.url_back_to_product" => "https://%{misp_url}/events/view/%{id}"
                }
            }            
        }

        # Provide summary of how many indicators were part of the MISP event
        if [attribute_count] != "" {
            mutate {
                convert => {
                    "attribute_count" => "string"
                }
                on_error => "_catch_ex"
            }
            mutate {
                replace => {
                    "_attribute_count.key" => "attribute_count"
                    "_attribute_count.value.string_value" => "%{attribute_count}"
                }
            }
            mutate {
                merge => {
                    "event.idm.entity.additional.fields" => "_attribute_count"
                }
            }
        }

        # context on the event's distribution status
        if [distribution] != "" {
            # 0 - Your organization only
            # 1 - This community only
            # 2 - Connected communities
            # 3 - All communities
            # 4 - Sharing group
            # 5 - Inherit Event
            mutate {
                convert => {
                    "distribution" => "string"
                }
                on_error => "_catch_ex"
            }
            mutate {
                gsub => [
                    "distribution","0","0 - Your organization only"
                ]
            }
            mutate {
                gsub => [
                    "distribution","1","1 - This community only"
                ]
            }
            mutate {
                gsub => [
                    "distribution","2","2 - Connected communities"
                ]
            }
            mutate {
                gsub => [
                     "distribution","3","3 - All communities"
                ]
            }
            mutate {
                gsub => [
                    "distribution","4","4 - Sharing group"
                ]
            }                                    
            mutate {
                gsub => [
                    "distribution","5","5 - Inherit Event"
                ]
            }                                                
            mutate {
                replace => {
                    "_distribution.key" => "distribution_string"
                    "_distribution.value.string_value" => "%{distribution}"
                }
            }
            mutate {
                merge => {
                    "event.idm.entity.additional.fields" => "_distribution"
                }
            }
        }

        # the organization that created the event
        if [Orgc][name] != "" {
            mutate {
                replace => {
                    "threat_det_1.threat_feed_name" => "%{Orgc.name}"
                }
            }
        }

        if [threat_level_id] != "" {
            # 1 - High
            # 2 - Medium
            # 3 - Low
            # 4 - Undefined
            mutate {
                replace => {
                    "threat_det_1.severity_details" => "%{threat_level_id}"
                }
            }

            if [threat_level_id] == "1" {
                mutate {
                    replace => {
                        "threat_det_1.severity" => "HIGH"
                    }
                }
            } else if [threat_level_id] == "2" {
                mutate {
                    replace => {
                        "threat_det_1.severity" => "MEDIUM"
                    }
                }
            } else if [threat_level_id] == "3" {
                mutate {
                    replace => {
                        "threat_det_1.severity" => "LOW"
                    }
                }
            } else {
                mutate {
                    replace => {
                        "threat_det_1.severity" => "UNKNOWN_SEVERITY"
                    }
                }
            }
        }

        # >>>>>>>>>>>>>
        # >>> Start Tag
        # >>>>>>>>>>>>>
        # - https://www.misp-project.org/taxonomies.html
        for index, tag in Tag {
            mutate {
                merge => {
                    "threat_det_1.category_details" => "tag.name"
                }
            }
        }
        # <<<<<<<<<<<        
        # <<< End Tag         
        # <<<<<<<<<<<


        # Merge the Event level threat object
        mutate {
            merge => {
                "event.idm.entity.metadata.threat" => "threat_det_1"
            }
        }


        # >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
        # START >>> The initial part of the CBN matches single Attributes and Object Attributes
        # >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

        # >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
        # >>> START Single event Attribute matches
        # >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

        # - meta-category is only populated for Object Attributes 
        if [meta-category] == "" {

            # Unique MISP Event ID
            if [Attribute][uuid] != "" {
                mutate {
                    replace => {
                        "event.idm.entity.metadata.product_entity_id" => "%{Attribute.uuid}"
                    }
                }
            }

            if [Attribute][uuid] != "" {
                mutate {
                    replace => {
                        "threat_det.threat_id" => "%{Attribute.uuid}"
                    }
                }
            }

            if [Attribute][category] != "" {
                mutate {
                    merge => {
                        "threat_det.category_details" => "Attribute.category"
                    }
                }
            }

            # store the specific Indicator type, e.g., sha256, whois-registrant
            if [Attribute][type] != "" {
                mutate {
                    replace => {
                        "threat_det.description" => "%{Attribute.type}:%{Attribute.value}"                
                    }
                }
            }

            if [Attribute][comment] != "" {
                mutate {
                    replace => {
                        "threat_det.summary" => "%{Attribute.comment}"
                    }
                }
            }

            #event_id
            # if [Attribute][id] != "" {
            #     mutate {
            #         replace => {
            #             "threat_det.url_back_to_product" => "https://%{misp_url}/events/view/%{id}"
            #         }
            #     }
            # }

            # Final Threat Detection Merge
            # - put any Threat Detect fields before this merge
            mutate {
                merge => {
                    "event.idm.entity.metadata.threat" => "threat_det"
                }
            }

            # Validation requirement
            if [Attribute][interval_start] != "" {
                date {
                    match => ["Attribute.interval_start", "UNIX"]
                    target => "event.idm.entity.metadata.interval.start_time"
                }
            }

            if [Attribute][interval_end] != "" {
                date {
                    match => ["Attribute.interval_end", "UNIX"]
                    target => "event.idm.entity.metadata.interval.end_time"
                }
            }


            # >>>>>>>>>>>>>>>>>>>>>>>>
            # >>> Start IOC extraction
            # >>>>>>>>>>>>>>>>>>>>>>>>

            # >>>>>>>>>>>>>>>>>>>>>>>>
            # >>> Start IP
            # >>>>>>>>>>>>>>>>>>>>>>>>

            if ([Attribute][type] == "ip-src" or [Attribute][type] == "ip-dst") and [Attribute][value] != "" {
                mutate {
                    replace => {
                        "event.idm.entity.metadata.entity_type" => "IP_ADDRESS"
                    }
                    merge => {
                        "event.idm.entity.entity.ip" => "Attribute.value"
                    }
                }
                mutate {
                    replace => {
                        "_supported_misp_ioc_type" => "true"
                    }
                }
            }

            if [Attribute][type] == "ip-dst|port" and [Attribute][value] != "" {

                csv {
                    source => "Attribute.value"
                    separator => "|"
                    on_error => "_ex_csv"
                }

                if ![_ex_csv] {
                    mutate {
                        replace => {
                            "event.idm.entity.metadata.entity_type" => "IP_ADDRESS"
                            "event.idm.entity.entity.port" => "%{column2}"
                        }
                        convert => {
                            "event.idm.entity.entity.port" => "integer"
                        }
                        merge => {
                            "event.idm.entity.entity.ip" => "column1"
                        }
                    }
                    mutate {
                        replace => {
                            "_supported_misp_ioc_type" => "true"
                        }
                    }                             
                }
            }

            if [Attribute][type] == "ip-src|port" and [Attribute][value] != "" {

                csv {
                    source => "Attribute.value"
                    separator => "|"
                    on_error => "_ex_csv"
                }

                if ![_ex_csv] {
                    mutate {
                        replace => {
                            "event.idm.entity.metadata.entity_type" => "IP_ADDRESS"
                            "event.idm.entity.entity.port" => "%{column2}"
                        }
                        convert => {
                            "event.idm.entity.entity.port" => "integer"
                        }
                        merge => {
                            "event.idm.entity.entity.ip" => "column1"
                        }
                    }
                    mutate {
                        replace => {
                            "_supported_misp_ioc_type" => "true"
                        }
                    }                
                }
            }

            # <<<<<<<<<<<<<<<<<
            # <<< End IP
            # <<<<<<<<<<<<<<<<<

            # >>>>>>>>>>>>>>>>>
            # >>> Start DOMAIN
            # >>>>>>>>>>>>>>>>>

            if [Attribute][type] == "domain|ip" and [Attribute][value] != "" {

                csv {
                    source => "Attribute.value"
                    separator => "|"
                    on_error => "_ex_csv"
                }

                if ![_ex_csv] {
                    mutate {
                        replace => {
                            "event.idm.entity.metadata.entity_type" => "DOMAIN_NAME"
                            "event.idm.entity.entity.hostname" => "%{column2}"
                        }
                        convert => {
                            "event.idm.entity.entity.port" => "integer"
                        }
                        merge => {
                            "event.idm.entity.entity.ip" => "column1"
                        }            
                    }
                    mutate {
                        replace => {
                            "_supported_misp_ioc_type" => "true"
                        }
                    }                
                }
            }


            if [Attribute][type] == "domain" and [Attribute][value] != "" {
                mutate {
                    replace => {
                        "event.idm.entity.metadata.entity_type" => "DOMAIN_NAME"
                        "event.idm.entity.entity.hostname" => "%{Attribute.value}"
                    }
                }
                mutate {
                    replace => {
                        "_supported_misp_ioc_type" => "true"
                    }
                }            
            }

            if [Attribute][type] == "hostname" and [Attribute][value] != "" {
                mutate {
                    replace => {
                        "event.idm.entity.metadata.entity_type" => "DOMAIN_NAME"
                        "event.idm.entity.entity.hostname" => "%{Attribute.value}"
                    }
                }
                mutate {
                    replace => {
                        "_supported_misp_ioc_type" => "true"
                    }
                }            
            }

            # <<<<<<<<<<<<<<
            # <<< End DOMAIN
            # <<<<<<<<<<<<<<

            # >>>>>>>>>>>>>>
            # >>> Start URL
            # >>>>>>>>>>>>>>

            if [Attribute][type] == "url" and [Attribute][value] != "" {
                if [strip_protocol_from_urls] == "true" {
                    mutate {
                        gsub => [
                            "Attribute.value", "http(?:s)?://(.*)","$1"
                        ]
                    }
                }
                mutate {
                    replace => {
                        "event.idm.entity.metadata.entity_type" => "URL"
                        "event.idm.entity.entity.url" => "%{Attribute.value}"
                    }
                }
                mutate {
                    replace => {
                        "_supported_misp_ioc_type" => "true"
                    }
                }            
            }

            # <<<<<<<<<<<
            # <<< End URL
            # <<<<<<<<<<<

            # >>>>>>>>>>>>>>
            # >>> Start FILE
            # >>>>>>>>>>>>>>

            if [Attribute][type] == "filename|md5" and [Attribute][value] != "" {

                csv {
                    source => "Attribute.value"
                    separator => "|"
                    on_error => "_ex_csv"
                }

                if ![_ex_csv] {
                    mutate {
                        replace => {
                            "event.idm.entity.metadata.entity_type" => "FILE"
                            "event.idm.entity.entity.file.md5" => "%{column2}"
                            "event.idm.entity.entity.file.full_path" => "%{column1}"
                        }
                    }
                    mutate {
                        replace => {
                            "_supported_misp_ioc_type" => "true"
                        }
                    }                  
                }          
            }

            if [Attribute][type] == "filename|sha1" and [Attribute][value] != "" {

                csv {
                    source => "Attribute.value"
                    separator => "|"
                    on_error => "_ex_csv"
                }

                if ![_ex_csv] {
                    mutate {
                        replace => {
                            "event.idm.entity.metadata.entity_type" => "FILE"
                            "event.idm.entity.entity.file.sha1" => "%{column2}"
                            "event.idm.entity.entity.file.full_path" => "%{column1}"
                        }
                    }
                    mutate {
                        replace => {
                            "_supported_misp_ioc_type" => "true"
                        }
                    }                  
                }
            }

            if [Attribute][type] == "filename|sha256" and [Attribute][value] != "" {

                csv {
                    source => "Attribute.value"
                    separator => "|"
                    on_error => "_ex_csv"
                }

                if ![_ex_csv] {
                    mutate {
                        replace => {
                            "event.idm.entity.metadata.entity_type" => "FILE"
                            "event.idm.entity.entity.file.sha256" => "%{column2}"
                            "event.idm.entity.entity.file.full_path" => "%{column1}"
                        }
                    }
                    mutate {
                        replace => {
                            "_supported_misp_ioc_type" => "true"
                        }
                    }                  
                }
            }


            if [Attribute][type] == "sha256" and [Attribute][value] != "" {
                mutate {
                    replace => {
                        "event.idm.entity.metadata.entity_type" => "FILE"
                        "event.idm.entity.entity.file.sha256" => "%{Attribute.value}"
                    }
                }
                mutate {
                    replace => {
                        "_supported_misp_ioc_type" => "true"
                    }
                }              
            }

            if [Attribute][type] == "x509-fingerprint-sha256" and [Attribute][value] != "" {
                mutate {
                    replace => {
                        "event.idm.entity.metadata.entity_type" => "FILE"
                        "event.idm.entity.entity.file.sha256" => "%{Attribute.value}"
                    }
                }
                mutate {
                    replace => {
                        "_supported_misp_ioc_type" => "true"
                    }
                }              
            }

            if [Attribute][type] == "sha1" and [Attribute][value] != "" {
                mutate {
                    replace => {
                        "event.idm.entity.metadata.entity_type" => "FILE"
                        "event.idm.entity.entity.file.sha1" => "%{Attribute.value}"
                    }
                }
                mutate {
                    replace => {
                        "_supported_misp_ioc_type" => "true"
                    }
                }              
            }

            if [Attribute][type] == "md5" and [Attribute][value] != "" {
                mutate {
                    replace => {
                        "event.idm.entity.metadata.entity_type" => "FILE"
                        "event.idm.entity.entity.file.md5" => "%{Attribute.value}"
                    }
                }
                mutate {
                    replace => {
                        "_supported_misp_ioc_type" => "true"
                    }
                }              
            }

            if [Attribute][type] == "ja3-fingerprint-md5" and [Attribute][value] != "" {
                mutate {
                    replace => {
                        "event.idm.entity.metadata.entity_type" => "FILE"
                        "event.idm.entity.entity.file.md5" => "%{Attribute.value}"
                    }
                }
                mutate {
                    replace => {
                        "_supported_misp_ioc_type" => "true"
                    }
                }              
            }

            if [Attribute][type] == "filename" and [Attribute][value] != "" {
                mutate {
                    replace => {
                        "event.idm.entity.metadata.entity_type" => "FILE"
                        "event.idm.entity.entity.file.full_path" => "%{Attribute.value}"
                    }
                }
                mutate {
                    replace => {
                        "_supported_misp_ioc_type" => "true"
                    }
                }              
            }

            # <<<<<<<<<<<<
            # <<< End FILE
            # <<<<<<<<<<<<

            # >>>>>>>>>>>>>>
            # >>> Start USER
            # >>>>>>>>>>>>>>

            if [Attribute][type] == "email" and [Attribute][value] != "" {
                mutate {
                    replace => {
                        "event.idm.entity.metadata.entity_type" => "USER"
                    }
                    merge => {
                        "event.idm.entity.entity.user.email_addresses" => "Attribute.value"
                    }
                }
                mutate {
                    replace => {
                        "_supported_misp_ioc_type" => "true"
                    }
                }              
            }

            if [Attribute][type] == "email-src" and [Attribute][value] != "" {
                mutate {
                    replace => {
                        "event.idm.entity.metadata.entity_type" => "USER"
                    }
                    merge => {
                        "event.idm.entity.entity.user.email_addresses" => "Attribute.value"
                    }
                }
                mutate {
                    replace => {
                        "_supported_misp_ioc_type" => "true"
                    }
                }              
            }

            if [Attribute][type] == "email-dst" and [Attribute][value] != "" {
                mutate {
                    replace => {
                        "event.idm.entity.metadata.entity_type" => "USER"
                    }
                    merge => {
                        "event.idm.entity.entity.user.email_addresses" => "Attribute.value"
                    }
                }
                mutate {
                    replace => {
                        "_supported_misp_ioc_type" => "true"
                    }
                }              
            }

            if [Attribute][type] == "whois-registrant-email" and [Attribute][value] != "" {
                mutate {
                    replace => {
                        "event.idm.entity.metadata.entity_type" => "USER"
                    }
                    merge => {
                        "event.idm.entity.entity.user.email_addresses" => "Attribute.value"
                    }
                }
                mutate {
                    replace => {
                        "_supported_misp_ioc_type" => "true"
                    }
                }              
            }
            # <<<<<<<<<<<<
            # <<< End USER
            # <<<<<<<<<<<<

            # >>>>>>>>>>>>>>>
            # >>> Start MUTEX
            # >>>>>>>>>>>>>>>

            # >>> REGISTRY
            if [Attribute][type] == "regkey" and [Attribute][value] != "" {
                mutate {
                    replace => {
                        "event.idm.entity.metadata.entity_type"          => "MUTEX"
                        "event.idm.entity.entity.resource.resource_type" => "MUTEX"
                        "event.idm.entity.entity.resource.name"          => "REGISTRY_KEY"
                        "event.idm.entity.entity.registry.registry_key" => "%{Attribute.value}"
                    }
                }
                mutate {
                    replace => {
                        "_supported_misp_ioc_type" => "true"
                    }
                }                 
            }

            if [Attribute][type] == "regkey|value" and [Attribute][value] != "" {

                csv {
                    source => "Attribute.value"
                    separator => "|"
                    on_error => "_ex_csv"
                }

                if ![_ex_csv] {
                    mutate {
                        replace => {
                            "event.idm.entity.metadata.entity_type" => "MUTEX"
                            "event.idm.entity.entity.resource.resource_type" => "MUTEX"
                            "event.idm.entity.entity.resource.name" => "REGISTRY_KEY"                                                        
                            "event.idm.entity.entity.registry.registry_key" => "%{column1}"
                            "event.idm.entity.entity.registry.registry_value_name" => "%{column2}"
                        }
                    }
                }
                mutate {
                    replace => {
                        "_supported_misp_ioc_type" => "true"
                    }
                }                 
            }
            # <<< REGISTRY

            # >>> USER AGENT
            if [Attribute][type] == "user-agent" and [Attribute][value] != "" {
                mutate {
                    replace => {
                        "event.idm.entity.entity.resource.resource_type" => "MUTEX"
                        "event.idm.entity.metadata.entity_type"          => "MUTEX"
                        "event.idm.entity.entity.resource.name"          => "USER_AGENT"
                        "event.idm.entity.entity.network.http.user_agent" => "%{Attribute.value}"                    
                    }
                }
                mutate {
                    replace => {
                        "_supported_misp_ioc_type" => "true"
                    }
                }                  
            }
            # <<< USER AGENT

            # <<<<<<<<<<<<<
            # <<< End MUTEX
            # <<<<<<<<<<<<<

            # <<<<<<<<<<<<<<<<<<<<<<
            # <<< End IOC extraction
            # <<<<<<<<<<<<<<<<<<<<<<

        }

        # <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
        # <<< End Single event Attribute matches
        # <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
        
        # >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
        # >>> Start Multi event Attribute matches
        # >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

        if [meta-category] != "" {

            # INTERVAL_START is a UDM Entity Graph Validation field
            if [interval_start] != "" {
                date {
                    match => ["interval_start", "UNIX"]
                    target => "event.idm.entity.metadata.interval.start_time"
                }
            }

            if [interval_end] != "" {
                date {
                    match => ["interval_end", "UNIX"]
                    target => "event.idm.entity.metadata.interval.end_time"
                }
            }


            # >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
            # >>> Start loop through Object Attributes
            # >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

            for groupedAttributes in Attribute {

                # Unique MISP Event ID
                if [groupedAttributes][uuid] != "" {
                    mutate {
                        replace => {
                            "event.idm.entity.metadata.product_entity_id" => "%{groupedAttributes.uuid}"
                        }
                    }
                }

                if [groupedAttributes][uuid] != "" {
                    mutate {
                        replace => {
                            "threat_det.threat_id" => "%{groupedAttributes.uuid}"
                        }
                    }
                }

                if [groupedAttributes][category] != "" {
                    mutate {
                        merge => {
                            "threat_det.category_details" => "groupedAttributes.category"
                        }
                    }
                }

                # store the specific Indicator type, e.g., sha256, whois-registrant
                if [groupedAttributes][type] != "" {
                    mutate {
                        replace => {
                            "threat_det.description" => "%{groupedAttributes.type}:%{groupedAttributes.value}"                
                        }
                    }
                }

                if [groupedAttributes][comment] != "" {
                    mutate {
                        replace => {
                            "threat_det.summary" => "%{groupedAttributes.comment}"
                        }
                    }
                }

                mutate {
                    replace => {
                        "event.idm.entity.metadata.product_entity_id" => "%{groupedAttributes.uuid}"
                    }
                }

                mutate {
                    replace => {
                        "threat_det.threat_id" => "%{groupedAttributes.uuid}"
                    }
                }    

                mutate {
                    replace => {
                        "threat_det.summary" => "%{groupedAttributes.comment}"
                    }
                }

                # Final Threat Detection Merge
                # - put any Threat Detect fields before this merge
                mutate {
                    merge => {
                        "event.idm.entity.metadata.threat" => "threat_det"
                    }
                }

                # start afresh each metadata.threat merge 
                mutate {
                    replace => {
                        "threat_det" => ""
                    }
                }


                # >>>>>>>>>>>>>>>>>>>>>>>>
                # >>> Start IOC extraction
                # >>>>>>>>>>>>>>>>>>>>>>>>

                # >>>>>>>>>>>>
                # >>> Start IP
                # >>>>>>>>>>>>

                if ([groupedAttributes][type] == "ip-src" or [groupedAttributes][type] == "ip-dst") and [groupedAttributes][value] != "" {
                    mutate {
                        replace => {
                            "event.idm.entity.metadata.entity_type" => "IP_ADDRESS"
                        }
                        merge => {
                            "event.idm.entity.entity.ip" => "groupedAttributes.value"
                        }
                    }
                    mutate {
                        replace => {
                            "_supported_misp_ioc_type" => "true"
                        }
                    }
                }

                if ([groupedAttributes][type] == "ip-dst|port" or [groupedAttributes][type] == "ip-src|port" ) and [groupedAttributes][value] != "" {

                    csv {
                        source => "groupedAttributes.value"
                        separator => "|"
                        on_error => "_ex_csv"
                    }

                    if ![_ex_csv] {
                        mutate {
                            replace => {
                                "event.idm.entity.metadata.entity_type" => "IP_ADDRESS"
                                "event.idm.entity.entity.port" => "%{column2}"
                            }
                            convert => {
                                "event.idm.entity.entity.port" => "integer"
                            }
                            merge => {
                                "event.idm.entity.entity.ip" => "column1"
                            }
                        }
                        mutate {
                            replace => {
                                "_supported_misp_ioc_type" => "true"
                            }
                        }                             
                    }
                }

                # <<<<<<<<<<
                # <<< End IP 
                # <<<<<<<<<<

                # >>>>>>>>>>>>>>>>
                # >>> Start DOMAIN
                # >>>>>>>>>>>>>>>>

                if [groupedAttributes][type] == "domain|ip" and [groupedAttributes][value] != "" {

                    csv {
                        source => "groupedAttributes.value"
                        separator => "|"
                        on_error => "_ex_csv"
                    }

                    if ![_ex_csv] {
                        mutate {
                            replace => {
                                "event.idm.entity.metadata.entity_type" => "DOMAIN_NAME"
                                "event.idm.entity.entity.hostname" => "%{column2}"
                            }
                            convert => {
                                "event.idm.entity.entity.port" => "integer"
                            }
                            merge => {
                                "event.idm.entity.entity.ip" => "column1"
                            }            
                        }
                        mutate {
                            replace => {
                                "_supported_misp_ioc_type" => "true"
                            }
                        }                
                    }
                }

                if ([groupedAttributes][type] == "domain" or [groupedAttributes][type] == "hostname") and [groupedAttributes][value] != "" {
                    mutate {
                        replace => {
                            "event.idm.entity.metadata.entity_type" => "DOMAIN_NAME"
                            "event.idm.entity.entity.hostname" => "%{groupedAttributes.value}"
                        }
                    }
                    mutate {
                        replace => {
                            "_supported_misp_ioc_type" => "true"
                        }
                    }            
                }

                # <<<<<<<<<<<<<<
                # <<< End DOMAIN
                # <<<<<<<<<<<<<<

                # >>>>>>>>>>>>>>
                # >>> Start FILE
                # >>>>>>>>>>>>>>


                if [groupedAttributes][type] == "filename" and [groupedAttributes][value] != "" {
                    mutate {
                        replace => {
                            "event.idm.entity.metadata.entity_type" => "FILE"
                            "event.idm.entity.entity.file.full_path" => "%{groupedAttributes.value}"
                        }
                    }
                    mutate {
                        replace => {
                            "_supported_misp_ioc_type" => "true"
                        }
                    }              
                }

                if [groupedAttributes][type] == "md5" and [groupedAttributes][value] != "" {
                    mutate {
                        replace => {
                            "event.idm.entity.metadata.entity_type" => "FILE"
                            "event.idm.entity.entity.file.md5" => "%{groupedAttributes.value}"
                        }
                    }
                    mutate {
                        replace => {
                            "_supported_misp_ioc_type" => "true"
                        }
                    }              
                }

                if [groupedAttributes][type] == "sha1" and [groupedAttributes][value] != "" {
                    mutate {
                        replace => {
                            "event.idm.entity.metadata.entity_type" => "FILE"
                            "event.idm.entity.entity.file.sha1" => "%{groupedAttributes.value}"
                        }
                    }
                    mutate {
                        replace => {
                            "_supported_misp_ioc_type" => "true"
                        }
                    }              
                }

                if [groupedAttributes][type] == "sha256" and [groupedAttributes][value] != "" {
                    mutate {
                        replace => {
                            "event.idm.entity.metadata.entity_type" => "FILE"
                            "event.idm.entity.entity.file.sha256" => "%{groupedAttributes.value}"
                        }
                    }
                    mutate {
                        replace => {
                            "_supported_misp_ioc_type" => "true"
                        }
                    }              
                }

                if [groupedAttributes][type] == "filename|md5" and [groupedAttributes][value] != "" {

                    csv {
                        source => "groupedAttributes.value"
                        separator => "|"
                        on_error => "_ex_csv"
                    }

                    if ![_ex_csv] {
                        mutate {
                            replace => {
                                "event.idm.entity.metadata.entity_type" => "FILE"
                                "event.idm.entity.entity.file.md5" => "%{column2}"
                                "event.idm.entity.entity.file.full_path" => "%{column1}"
                            }
                        }
                        mutate {
                            replace => {
                                "_supported_misp_ioc_type" => "true"
                            }
                        }                  
                    }          
                }

                if [groupedAttributes][type] == "filename|sha1" and [groupedAttributes][value] != "" {

                    csv {
                        source => "groupedAttributes.value"
                        separator => "|"
                        on_error => "_ex_csv"
                    }

                    if ![_ex_csv] {
                        mutate {
                            replace => {
                                "event.idm.entity.metadata.entity_type" => "FILE"
                                "event.idm.entity.entity.file.sha1" => "%{column2}"
                                "event.idm.entity.entity.file.full_path" => "%{column1}"
                            }
                        }
                        mutate {
                            replace => {
                                "_supported_misp_ioc_type" => "true"
                            }
                        }                  
                    }
                }

                if [groupedAttributes][type] == "filename|sha256" and [groupedAttributes][value] != "" {

                    csv {
                        source => "groupedAttributes.value"
                        separator => "|"
                        on_error => "_ex_csv"
                    }

                    if ![_ex_csv] {
                        mutate {
                            replace => {
                                "event.idm.entity.metadata.entity_type" => "FILE"
                                "event.idm.entity.entity.file.sha256" => "%{column2}"
                                "event.idm.entity.entity.file.full_path" => "%{column1}"
                            }
                        }
                        mutate {
                            replace => {
                                "_supported_misp_ioc_type" => "true"
                            }
                        }                  
                    }
                }

                # FILE is nearest match for a JA3
                if [groupedAttributes][type] == "ja3-fingerprint-md5" and [groupedAttributes][value] != "" {
                    mutate {
                        replace => {
                            "event.idm.entity.metadata.entity_type" => "FILE"
                            "event.idm.entity.entity.file.md5" => "%{groupedAttributes.value}"
                        }
                    }
                    mutate {
                        replace => {
                            "_supported_misp_ioc_type" => "true"
                        }
                    }              
                }

                # <<<<<<<<<<<<
                # <<< End FILE
                # <<<<<<<<<<<<

                # >>>>>>>>>>>>>
                # >>> Start URL
                # >>>>>>>>>>>>>

                if [groupedAttributes][type] == "url" and [groupedAttributes][value] != "" {
                    if [strip_protocol_from_urls] == "true" {
                        mutate {
                            gsub => [
                                "Attribute.value", "http(?:s)?://(.*)","$1"
                            ]
                        }
                    }
                    mutate {
                        replace => {
                            "event.idm.entity.metadata.entity_type" => "URL"
                            "event.idm.entity.entity.url" => "%{groupedAttributes.value}"
                        }
                    }
                    mutate {
                        replace => {
                            "_supported_misp_ioc_type" => "true"
                        }
                    }            
                }                

                # <<<<<<<<<<<
                # <<< End URL
                # <<<<<<<<<<<

                # >>>>>>>>>>>>>>
                # >>> Start USER
                # >>>>>>>>>>>>>>

                if [groupedAttributes][type] == "email" and [groupedAttributes][value] != "" {
                    mutate {
                        replace => {
                            "event.idm.entity.metadata.entity_type" => "USER"
                        }
                        merge => {
                            "event.idm.entity.entity.user.email_addresses" => "groupedAttributes.value"
                        }
                    }
                    mutate {
                        replace => {
                            "_supported_misp_ioc_type" => "true"
                        }
                    }              
                }

                if [groupedAttributes][type] == "email-src" and [groupedAttributes][value] != "" {
                    mutate {
                        replace => {
                            "event.idm.entity.metadata.entity_type" => "USER"
                        }
                        merge => {
                            "event.idm.entity.entity.user.email_addresses" => "groupedAttributes.value"
                        }
                    }
                    mutate {
                        replace => {
                            "_supported_misp_ioc_type" => "true"
                        }
                    }              
                }

                if [groupedAttributes][type] == "email-dst" and [groupedAttributes][value] != "" {
                    mutate {
                        replace => {
                            "event.idm.entity.metadata.entity_type" => "USER"
                        }
                        merge => {
                            "event.idm.entity.entity.user.email_addresses" => "groupedAttributes.value"
                        }
                    }
                    mutate {
                        replace => {
                            "_supported_misp_ioc_type" => "true"
                        }
                    }              
                }

                if [groupedAttributes][type] == "whois-registrant-email" and [groupedAttributes][value] != "" {
                    mutate {
                        replace => {
                            "event.idm.entity.metadata.entity_type" => "USER"
                        }
                        merge => {
                            "event.idm.entity.entity.user.email_addresses" => "groupedAttributes.value"
                        }
                    }
                    mutate {
                        replace => {
                            "_supported_misp_ioc_type" => "true"
                        }
                    }              
                }

                # <<<<<<<<<<<<
                # <<< End USER
                # <<<<<<<<<<<<

                # >>>>>>>>>>>>>>>
                # >>> Start MUTEX
                # >>>>>>>>>>>>>>>

                # - MUTEX is a generic catch-all for Attributes that don't map to an existing metadata.entity_type

                # >>> REGISTRY
                if [groupedAttributes][type] == "regkey" and [groupedAttributes][value] != "" {
                    mutate {
                        replace => {
                            "event.idm.entity.metadata.entity_type"          => "MUTEX"
                            "event.idm.entity.entity.resource.resource_type" => "MUTEX"
                            "event.idm.entity.entity.resource.name"          => "REGISTRY_KEY"
                            "event.idm.entity.entity.registry.registry_key" => "%{groupedAttributes.value}"
                        }
                    }
                    mutate {
                        replace => {
                            "_supported_misp_ioc_type" => "true"
                        }
                    }                 
                }

                if [groupedAttributes][type] == "regkey|value" and [groupedAttributes][value] != "" {

                    csv {
                        source => "groupedAttributes.value"
                        separator => "|"
                        on_error => "_ex_csv"
                    }

                    if ![_ex_csv] {
                        mutate {
                            replace => {
                                "event.idm.entity.metadata.entity_type" => "MUTEX"
                                "event.idm.entity.entity.resource.resource_type" => "MUTEX"
                                "event.idm.entity.entity.resource.name" => "REGISTRY_KEY"                                                        
                                "event.idm.entity.entity.registry.registry_key" => "%{column1}"
                                "event.idm.entity.entity.registry.registry_value_name" => "%{column2}"
                            }
                        }
                    }
                    mutate {
                        replace => {
                            "_supported_misp_ioc_type" => "true"
                        }
                    }                 
                }
                # <<< REGISTRY

                # >>> USER AGENT
                if [groupedAttributes][type] == "user-agent" and [groupedAttributes][value] != "" {
                    mutate {
                        replace => {
                            "event.idm.entity.entity.resource.resource_type" => "MUTEX"
                            "event.idm.entity.metadata.entity_type"          => "MUTEX"
                            "event.idm.entity.entity.resource.name"          => "USER_AGENT"
                            "event.idm.entity.entity.network.http.user_agent" => "%{groupedAttributes.value}"                    
                        }
                    }
                    mutate {
                        replace => {
                            "_supported_misp_ioc_type" => "true"
                        }
                    }                  
                }
                # <<< USER AGENT

                # <<<<<<<<<<<<<
                # <<< End MUTEX
                # <<<<<<<<<<<<<

                # <<<<<<<<<<<<<<<<<<<<<<
                # <<< End IOC extraction
                # <<<<<<<<<<<<<<<<<<<<<<

            }

            # >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
            # >>> End loop through Object Attributes
            # >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>


        }

        # >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
        # >>> End Multi event Attribute matches
        # >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

        # >>> Start Output 
        # - if we have a 1) supported MISP Event Attribute output and 2) it has a valid interval_start time then output a UDM Entity IOC Event
        # - if we do not have the above then we output a UDM Generic Event so as to avoid unparsed logs

        if ([_supported_misp_ioc_type] == "true" and ([interval_start] != "" or [Attribute][interval_start] != "")) {
            mutate {
                merge => {
                    "@output" => "event"
                }
            }
        } else {
            mutate {
                replace => {
                    "event1.idm.read_only_udm.metadata.event_type" => "GENERIC_EVENT"
                    "event1.idm.read_only_udm.metadata.product_event_type" => "Unsupported MISP Event type."
                }
            }
            mutate {
                merge => {
                    "@output" => "event1"
                }
            }            
        }  
        # >>> End Output       
    }
}
